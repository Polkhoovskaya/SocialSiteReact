{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Message/Message.module.css","assets/images/avatar.jfif","assets/images/preloader.svg","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","api/api.js","redux/auth-reducer.js","redux/messagesPage-reducer.js","redux/profilePage-reducer.js","redux/sideBar-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FromsControls.jsx","utils/validators/validators.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Paginator.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","components/Users/UsersAPIComponent.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormControls.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Header/Header.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","then","response","data","followAPI","userId","post","unFollowAPI","delete","defaultState","initializwd","email","login","isAuth","setAuthUserData","type","inintializeAppThunkCreator","dispatch","resultCode","id","authReducer","state","action","initialized","dialogsData","name","messagesData","message","messagePageReducer","formData","newMessageText","postsData","profile","status","setUserProfile","profilePageReducer","newPost","friends","sideBarReducer","users","totalUsersCount","isLoading","followingProgress","followSuccess","unFollowSuccess","toggleIsLoading","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","usersReducer","map","user","followed","page","filter","reducers","combineReducers","messagesPage","profilePage","sideBar","usersPage","auth","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","s","nav","item","to","activeClassName","active","friendsPanel","friend","key","src","DialogItem","dialog","Message","Textarea","input","meta","props","error","touched","formControl","Input","requiredField","value","maxLengthCreator","max","length","undefined","maxLength","DialogsReduxFrom","reduxForm","main","dialogs","messages","onSubmit","handleSubmit","Field","placeholder","component","validate","Dialogs","addNewMessage","withAuthRedirect","Component","RedirectComponent","this","React","connect","addMessageActionCreator","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","selectedPage","e","onPageChanget","Users","photo","photos","small","userPhoto","disabled","some","unFollow","follow","satus","Preloader","preloader","UsersAPIComponent","setCurrentPage","getUsersThunkCreator","testReselectLibSelector","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoading","getFollowingProgress","bind","items","totalCount","ProfileStatusWithHooks","stateWithSetState","editMode","setEditMode","addStatus","useEffect","autoFocus","onChange","currentTarget","onBlur","updateStatus","onDoubleClick","ProfileInfo","profileInfo","aboutMe","contacts","github","vk","twitter","instagram","Post","MyPostsReduxFrom","MyPosts","memo","addNewPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","setProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","getProfile","getStatus","put","updateAuthStatus","withRouter","Header","header","authBlock","logoutThunkCreator","HeaderContainer","LoginForm","formSummaryError","LoginReduxFrom","loginThunkCreator","password","rememberMe","stopSubmit","_error","App","render","path","DialogsContainer","UsersContainer","Boolean","location","hostname","ReactDOM","StrictMode","basename","process","getState","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,aAAe,6BAA6B,QAAU,wBAAwB,OAAS,yB,oBCA/LD,EAAOC,QAAU,CAAC,SAAW,4B,oBCD7BD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCC3CD,EAAOC,QAAU,CAAC,KAAO,wB,gECAzBD,EAAOC,QAAU,CAAC,KAAO,qB,8MCCnBC,E,OAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAE,UAAW,0CAGbC,EAAW,WAAqC,IAApCC,EAAmC,uDAArB,EAAGC,EAAkB,uDAAP,GACjD,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAkCfC,EAAY,SAACC,GACtB,OAAOd,EAASe,KAAT,iBAAwBD,GAAU,IACpCJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SAIfI,EAAc,SAACF,GACxB,OAAOd,EAASiB,OAAT,iBAA0BH,IAC5BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SCjDxBM,EAAe,CACfC,aAAa,EACbL,OAAQ,KACRM,MAAO,KACPC,MAAO,KACPC,QAAQ,GAcCC,EAAkB,SAACT,EAAQM,EAAOC,EAAOC,GAAvB,MAAmC,CAAEE,KAtB9C,qBAsBmEZ,KAAM,CAAEE,SAAQM,QAAOC,QAAOC,YAG1GG,EAA6B,WACtC,OAAO,SAACC,GDbD1B,EAASS,IAAT,WACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,QCYVF,MAAK,SAAAE,GACX,GAAwB,IAApBA,EAAKe,WAAkB,CAAC,IAAD,EACIf,EAAKA,KAA1BgB,EADiB,EACjBA,GAAIP,EADa,EACbA,MAAOD,EADM,EACNA,MACjBM,EAASH,EAAgBK,EAAIP,EAAOD,GAAO,QAEhDV,MAAK,WACJgB,EAV6B,CAAEF,KAtBnB,8BA6DTK,EAnDK,WAAmC,IAAlCC,EAAiC,uDAAzBZ,EAAca,EAAW,uCAClD,OAAQA,EAAOP,MACX,IAbc,qBAcV,OAAO,2BAAKM,GAAUC,EAAOnB,MACjC,IAdgB,uBAeZ,OAAO,2BAAKkB,GAAZ,IAAmBE,aAAa,IACpC,QACI,OAAOF,I,QClBbZ,EAAe,CACjBe,YAAa,CACT,CAAEL,GAAI,EAAGM,KAAM,QACf,CAAEN,GAAI,EAAGM,KAAM,SACf,CAAEN,GAAI,EAAGM,KAAM,QACf,CAAEN,GAAI,EAAGM,KAAM,SACf,CAAEN,GAAI,EAAGM,KAAM,SAEnBC,aAAc,CACV,CAAEP,GAAI,EAAGQ,QAAS,MAClB,CAAER,GAAI,EAAGQ,QAAS,oBAClB,CAAER,GAAI,EAAGQ,QAAS,UAClB,CAAER,GAAI,EAAGQ,QAAS,MAClB,CAAER,GAAI,EAAGQ,QAAS,QAiBXC,EAbY,WAAmC,IAAlCP,EAAiC,uDAAzBZ,EAAca,EAAW,uCACzD,OAAQA,EAAOP,MACX,IAtBY,cAwBR,OAAO,2BAAKM,GAAZ,IAAmBK,aAAa,GAAD,mBAAML,EAAMK,cAAZ,CAA0B,CAAEP,GAAI,EAAGQ,QAASL,EAAOO,SAASF,WAAYG,eAAgB,KAE3H,QACI,OAAOT,ICpBbZ,EAAe,CACjBsB,UAAW,CACP,CAAEZ,GAAI,EAAGb,KAAM,UACf,CAAEa,GAAI,EAAGb,KAAM,WAEnB0B,QAAS,KACTC,OAAQ,IAwBCC,EAAiB,SAACF,GAAD,MAAc,CAAEjB,KAlCrB,mBAkC6CiB,QAASA,IAiChEG,EAtDY,WAAmC,IAAlCd,EAAiC,uDAAzBZ,EAAca,EAAW,uCACzD,OAAQA,EAAOP,MACX,IAhBS,WAkBL,OAAO,2BAAKM,GAAZ,IAAmBU,UAAU,GAAD,mBAAMV,EAAMU,WAAZ,CAAuB,CAAEZ,GAAI,EAAGb,KAAMgB,EAAOO,SAASO,aAEtF,IAnBiB,mBAoBb,OAAO,2BAAKf,GAAZ,IAAmBW,QAASV,EAAOU,UAEvC,IArBW,aAwBX,IAvBc,gBAwBV,OAAO,2BAAKX,GAAZ,IAAmBY,OAAQX,EAAOW,SAEtC,QACI,OAAOZ,IChCbZ,EAAe,CACjB4B,QAAS,CACL,CAAElB,GAAI,EAAGM,KAAM,QACf,CAAEN,GAAI,EAAGM,KAAM,SACf,CAAEN,GAAI,EAAGM,KAAM,UASRa,EAJQ,WAAmC,IAAlCjB,EAAiC,uDAAzBZ,EAC5B,OAAOY,G,yBCAPZ,EAAe,CACf8B,MAAO,GACPxC,SAAU,EACVyC,gBAAiB,EACjB1C,YAAa,EACb2C,WAAW,EACXC,kBAAmB,IAgDVC,EAAgB,SAACxB,GAAD,MAAS,CAAEJ,KA9DzB,SA8DuCV,OAAQc,IACjDyB,EAAkB,SAACzB,GAAD,MAAS,CAAEJ,KA9DzB,WA8DyCV,OAAQc,IAIrD0B,EAAkB,SAACJ,GAAD,MAAgB,CAAE1B,KA9DvB,oBA8DgD0B,UAAWA,IACxEK,EAA0B,SAACJ,EAAmBrC,GAApB,MAAgC,CAAEU,KA9DpC,+BA8DwE2B,kBAAmBA,EAAmBrC,OAAQA,IAarJ0C,EAAkB,uCAAG,WAAO9B,EAAUZ,EAAQ2C,EAAWC,GAApC,SAAAC,EAAA,6DAEvBjC,EAAS6B,GAAwB,EAAMzC,IAFhB,SAIN2C,EAAU3C,GAJJ,OAKA,GALA,OAKda,YACLD,EAASgC,EAAc5C,IAE3BY,EAAS6B,GAAwB,EAAOzC,IARjB,2CAAH,4DA8BT8C,EA9FM,WAAmC,IAAlC9B,EAAiC,uDAAzBZ,EAAca,EAAW,uCACnD,OAAQA,EAAOP,MACX,IAnBO,SAoBH,OAAO,2BACAM,GADP,IAEIkB,MAAOlB,EAAMkB,MAAMa,KAAI,SAAAC,GACnB,OAAIA,EAAKlC,KAAOG,EAAOjB,OACZ,2BAAKgD,GAAZ,IAAkBC,UAAU,IAEzBD,OAGnB,IA5BS,WA6BL,OAAO,2BACAhC,GADP,IAEIkB,MAAOlB,EAAMkB,MAAMa,KAAI,SAAAC,GACnB,OAAIA,EAAKlC,KAAOG,EAAOjB,OACZ,2BAAKgD,GAAZ,IAAkBC,UAAU,IAEzBD,OAGnB,IArCU,YAsCN,OAAO,2BAAKhC,GAAZ,IAAmBkB,MAAM,YAAKjB,EAAOiB,SAEzC,IAvCiB,mBAwCb,OAAO,2BAAKlB,GAAZ,IAAmBvB,YAAawB,EAAOiC,OAE3C,IAzCsB,wBA0ClB,OAAO,2BAAKlC,GAAZ,IAAmBmB,gBAAiBlB,EAAOkB,kBAE/C,IA3CkB,oBA4Cd,OAAO,2BAAKnB,GAAZ,IAAmBoB,UAAWnB,EAAOmB,YAEzC,IA7C6B,+BA8CzB,OAAO,2BACApB,GADP,IAEIqB,kBAAmBpB,EAAOoB,kBAAP,sBAA+BrB,EAAMqB,mBAArC,CAAwDpB,EAAOjB,SAAUgB,EAAMqB,kBAAkBc,QAAO,SAAArC,GAAE,OAAIA,IAAOG,EAAOjB,YAGvJ,QACI,OAAOgB,I,kBCnDfoC,EAAWC,YAAgB,CAC3BC,aAAc/B,EACdgC,YAAazB,EACb0B,QAASvB,EACTwB,UAAWX,EACXY,KAAM3C,EACN4C,KAAMC,MAGJC,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAQC,YAAYd,EAAUS,EAAiBM,YAAgBC,OAErEN,OAAOG,MAAQA,EAEAA,Q,kECQAI,EA5BA,SAAC,GAAe,IAAbrD,EAAY,EAAZA,MACd,OACI,yBAAKsD,UAAWC,IAAEC,KACd,yBAAKF,UAAWC,IAAEE,MAAM,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,QAA1C,YACxB,yBAAKN,UAAWC,IAAEE,MAAM,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,QAA1C,aACxB,yBAAKN,UAAWC,IAAEE,MAAM,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,QAAxC,UACxB,yBAAKN,UAAWC,IAAEE,MAAM,kBAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBJ,IAAEK,QAAvC,SACxB,yBAAKN,UAAWC,IAAEE,MAAM,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,QAAxC,UACxB,yBAAKN,UAAWC,IAAEE,MAAM,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBJ,IAAEK,QAA3C,aACxB,yBAAKN,UAAWC,IAAEM,cACd,wCACA,yBAAKP,UAAWC,IAAEvC,SAEVhB,EAAMgB,QAAQe,KAAI,SAAA+B,GACd,OACI,yBAAKR,UAAWC,IAAEO,OAAQC,IAAKD,EAAOhE,IAClC,yBAAKkE,IAAI,8EACT,2BAAIF,EAAO1D,c,qCCVhC6D,GAPI,SAAC,GAAkB,IAAhB7D,EAAe,EAAfA,KAAMN,EAAS,EAATA,GACxB,OAAO,yBAAKwD,UAAWC,KAAEW,QACrB,yBAAKF,IAAI,8EACT,kBAAC,IAAD,CAASN,GAAI,YAAc5D,EAAI6D,gBAAiBJ,KAAEK,QAASxD,K,qBCApD+D,GAJC,SAAC,GAAiB,IAAf7D,EAAc,EAAdA,QACf,OAAO,yBAAKgD,UAAWC,KAAEjD,SAAUA,I,iDCD1B8D,GAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,iCAE7CC,EAAQF,EAAKG,SAAWH,EAAKE,MAEnC,OACI,yBAAKlB,UAAWC,KAAEmB,YAAc,KAAOF,EAAQjB,KAAEiB,MAAQ,KACrD,6BACI,8CAAcH,EAAWE,KAE7B,6BACKC,GAAS,8BAAOF,EAAKE,UAMzBG,GAAQ,SAAC,GAA+B,IAA7BN,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,iCAE1CC,EAAQF,EAAKE,OAASF,EAAKG,QAEjC,OACI,yBAAKnB,UAAWC,KAAEmB,YAAc,KAAOF,EAAQjB,KAAEiB,MAAQ,KACrD,6BACI,2CAAWH,EAAWE,KAE1B,6BACKC,GAAS,8BAAOF,EAAKE,UC7BzBI,GAAgB,SAAAC,GACzB,IAAIA,EACJ,MAAO,qBAGEC,GAAmB,SAACC,GAAD,OAAS,SAAAF,GACrC,OAAOA,GAASA,EAAMG,QAAUD,OAAME,EAA/B,kBAAsDF,EAAtD,yBCELG,GAAYJ,GAAiB,IAwB7BK,GAAmBC,aAAU,CAAEzC,KAAM,WAAlByC,EAtBL,SAACb,GAEjB,OAAO,yBAAKjB,UAAWC,IAAE8B,MACrB,yBAAK/B,UAAWC,IAAE+B,SAEVf,EAAMpE,YAAY4B,KAAI,SAAAmC,GAAM,OAAI,kBAAC,GAAD,CAAY9D,KAAM8D,EAAO9D,KAAMN,GAAIoE,EAAOpE,GAAIiE,IAAKG,EAAOpE,SAGlG,yBAAKwD,UAAWC,IAAEgC,UAEVhB,EAAMlE,aAAa0B,KAAI,SAAAzB,GAAO,OAAI,kBAAC,GAAD,CAASA,QAASA,EAAQA,QAASyD,IAAKzD,EAAQR,QAEtF,6BACI,0BAAM0F,SAAUjB,EAAMkB,cAClB,kBAACC,GAAA,EAAD,CAAOtF,KAAM,UAAWuF,YAAa,UAAWC,UAAWxB,GAAUyB,SAAU,CAACjB,GAAeM,MAC/F,sDAoBLY,GAXC,SAACvB,GAMb,OACI,kBAACY,GAAD,iBAAsBZ,EAAtB,CAA6BiB,SALhB,SAAChF,GACd+D,EAAMwB,cAAcvF,Q,QCjCfwF,GAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAA0B,IAAtBC,KAAK5B,MAAM/E,OAA2B,kBAAC,IAAD,CAAUkE,GAAI,WACjD,kBAACuC,EAAcE,KAAK5B,WALQ,GAEX6B,IAAMH,WAatC,OAFqCI,cAJJ,SAACrG,GAAD,MAAY,CACzCR,OAAQQ,EAAM0C,KAAKlD,UAGc6G,CAAoCH,ICK9DlD,eACXqD,cAhBkB,SAACrG,GACnB,MAAO,CACHG,YAAaH,EAAMsC,aAAanC,YAChCE,aAAcL,EAAMsC,aAAajC,iBAIhB,SAACT,GACtB,MAAO,CACHmG,cAAe,SAACvF,GACZZ,EZc2B,SAACY,GAAD,MAAe,CAAEd,KA/BpC,cA+BuDc,SAAUA,GYdhE8F,CAAwB9F,SAOzCwF,GAFWhD,CAGb8C,I,kDCYaS,GAlCG,SAAChC,GAIf,IAFA,IAAIiC,EAAaC,KAAKC,KAAKnC,EAAMoC,gBAAkBpC,EAAM7F,UACrDkI,EAAQ,GACHC,EAAI,EAAGA,GAAKL,EAAYK,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeN,KAAKC,KAAKF,EAAajC,EAAMyC,aARvB,EASeC,mBAAS,GATxB,oBASpBC,EAToB,KASLC,EATK,KAUrBC,GAAyBF,EAAgB,GAAK3C,EAAMyC,YAAc,EAClEK,EAAyBH,EAAgB3C,EAAMyC,YAEnD,OACI,6BAEKE,EAAgB,GACb,4BAAQI,QAAS,WAAQH,EAAiBD,EAAgB,KAA1D,QAEHN,EACIzE,QAAO,SAAAoF,GAAC,OAAIA,GAAKH,GAAyBG,GAAKF,KAC/CtF,KAAI,SAAAwF,GACD,OAAO,0BAAMjE,UAAWiB,EAAM9F,cAAgB8I,GAAKhE,KAAEiE,aACjDF,QAAS,SAACG,GAAQlD,EAAMmD,cAAcH,KACxCA,MAITR,EAAeG,GACZ,4BAAQI,QAAS,WAAQH,EAAiBD,EAAgB,KAA1D,UCaDS,GAvCD,SAACpD,GAEX,OACI,6BACI,kBAAC,GAAD,CAAWoC,gBAAiBpC,EAAMpD,gBAAiBzC,SAAU6F,EAAM7F,SAAUD,YAAa8F,EAAM9F,YAAaiJ,cAAenD,EAAMmD,cAAeV,YAAa,KAE1JzC,EAAMrD,MAAMa,KAAI,SAAAC,GACZ,OAAO,yBAAK+B,IAAK/B,EAAKlC,IAClB,8BACI,6BACI,kBAAC,IAAD,CAAS4D,GAAI,YAAc1B,EAAKlC,IAAK,yBAAKwD,UAAWC,KAAEqE,MAAO5D,IAA0B,MAArBhC,EAAK6F,OAAOC,MAAgB9F,EAAK6F,OAAOC,MAAQC,SAEvH,6BACK/F,EAAKC,SACA,4BAAQ+F,SAAUzD,EAAMlD,kBAAkB4G,MAAK,SAAAnI,GAAE,OAAIA,IAAOkC,EAAKlC,MAAKwH,QAAS,WAC7E/C,EAAM2D,SAASlG,EAAKlC,MADtB,YAGA,4BAAQkI,SAAUzD,EAAMlD,kBAAkB4G,MAAK,SAAAnI,GAAE,OAAIA,IAAOkC,EAAKlC,MAAKwH,QAAS,WAC7E/C,EAAM4D,OAAOnG,EAAKlC,MADpB,YAKd,8BACI,8BACI,6BAAMkC,EAAK5B,MACX,6BAAM4B,EAAKoG,QAEf,8BACI,6BAAM,yBACN,6BAAM,8B,qBC5BvBC,GAJG,WACd,OAAO,yBAAKrE,IAAKsE,QCoCNC,G,kDAlCX,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IAOVmD,cAAgB,SAACxF,GAEb,EAAKqC,MAAMiE,eAAetG,GAC1B,EAAKqC,MAAMkE,qBAAqBvG,EAAM,EAAKqC,MAAM7F,WAXlC,E,gEAKfyH,KAAK5B,MAAMkE,qBAAqBtC,KAAK5B,MAAM9F,YAAa0H,KAAK5B,MAAM7F,Y,+BAUnE,OACI,6BAEQyH,KAAK5B,MAAMnD,UAAY,kBAAC,GAAD,MACnB,kBAAC,GAAD,CAAOD,gBAAiBgF,KAAK5B,MAAMpD,gBAC/BzC,SAAUyH,KAAK5B,MAAM7F,SACrBgJ,cAAevB,KAAKuB,cACpBjJ,YAAa0H,KAAK5B,MAAM9F,YACxByC,MAAOiF,KAAK5B,MAAMrD,MAClBgH,SAAU/B,KAAK5B,MAAM2D,SACrBC,OAAQhC,KAAK5B,MAAM4D,OACnB9G,kBAAmB8E,KAAK5B,MAAMlD,kBAC9BI,wBAAyB0E,KAAK5B,MAAM9C,+B,GA7BhC2E,IAAMH,W,UCEzByC,GAA0BC,cAJf,SAAC3I,GACrB,OAAOA,EAAMyC,UAAUvB,SAGqC,SAACA,GAE7D,OAAOA,EAAMiB,QAAO,SAAAyG,GAAC,OAAI,QAGhBC,GAAc,SAAC7I,GACxB,OAAOA,EAAMyC,UAAU/D,UAGdoK,GAAqB,SAAC9I,GAC/B,OAAOA,EAAMyC,UAAUtB,iBAGd4H,GAAiB,SAAC/I,GAC3B,OAAOA,EAAMyC,UAAUhE,aAGduK,GAAe,SAAChJ,GACzB,OAAOA,EAAMyC,UAAUrB,WAGd6H,GAAuB,SAACjJ,GACjC,OAAOA,EAAMyC,UAAUpB,mBCTZ2B,eAAQqD,cAXD,SAACrG,GACnB,MAAO,CACHkB,MAAOwH,GAAwB1I,GAC/BtB,SAAUmK,GAAY7I,GACtBmB,gBAAiB2H,GAAmB9I,GACpCvB,YAAasK,GAAe/I,GAC5BoB,UAAW4H,GAAahJ,GACxBqB,kBAAmB4H,GAAqBjJ,MAK5C,CACImI,OfyEc,SAACnJ,GACnB,8CAAO,WAAOY,GAAP,eAAAiC,EAAA,sDAECF,EAAY5C,EAAUmK,KAAKnK,GAG/B2C,EAAmB9B,EAAUZ,EAAQ2C,EAFjBL,GAHjB,2CAAP,uDezEI4G,SfkFgB,SAAClJ,GACrB,8CAAO,WAAOY,GAAP,eAAAiC,EAAA,sDAECF,EAAY5C,EAAUmK,KAAKhK,GAG/BwC,EAAmB9B,EAAUZ,EAAQ2C,EAFjBJ,GAHjB,2CAAP,uDelFIiH,ef4CsB,SAACtG,GAAD,MAAW,CAAExC,KA9DlB,mBA8D0CwC,KAAMA,Ie3CjET,0BACAgH,qBf+C4B,SAAChK,EAAaC,GAC9C,8CAAO,WAAOkB,GAAP,eAAAiC,EAAA,6DACHjC,EAAS4B,GAAgB,IADtB,SAGchD,EAASC,EAAaC,GAHpC,OAGCI,EAHD,OAIHc,EAX4B,CAAEF,KA9DpB,YA8DqCwB,MAW7BpC,EAAKqK,QACvBvJ,EAVgD,CAAEF,KA9D5B,wBA8DyDyB,gBAUnDrC,EAAKsK,aACjCxJ,EAAS4B,GAAgB,IANtB,2CAAP,yDetDWwB,CAOPuF,I,0CCUOc,IClCajD,IAAMH,UDAH,SAAC1B,GAE5B,IAAI+E,EAAoBrC,oBAAS,GAFK,eAGRqC,EAHQ,GAGjCC,EAHiC,KAGvBC,EAHuB,OAIZvC,mBAAS1C,EAAM3D,QAJH,oBAIjCA,EAJiC,KAIzB6I,EAJyB,KAMtCC,qBAAU,WACND,EAAUlF,EAAM3D,UACjB,CAAC2D,EAAM3D,SAeV,OACI,6BAES2I,EAEK,2BAAOI,WAAS,EAACC,SATZ,SAACnC,GACpBgC,EAAUhC,EAAEoC,cAAchF,QAQ+BiF,OAdlC,WACvBN,GAAY,GACZjF,EAAMwF,aAAanJ,IAYkEiE,MAAOjE,IADhF,uBAAGoJ,cAjBE,WACjBR,GAAY,KAgBkCjF,EAAM3D,WEQ7CqJ,GA/BK,SAAC,GAAuC,IAArCtJ,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQmJ,EAAmB,EAAnBA,aACpC,OAAKpJ,EAID,yBAAK2C,UAAWC,KAAE2G,aAKd,6BAEQvJ,EAAQkH,OAAOC,MAAQ,yBAAK9D,IAAKrD,EAAQkH,OAAOC,QAAY,yBAAK9D,IAAI,8EAGrEpD,GAAU,kBAAC,GAAD,CAAwBA,OAAQA,EAAQmJ,aAAcA,IAEpE,6BACI,6BAAMpJ,EAAQwJ,SACd,wCACI,4BAAKxJ,EAAQyJ,SAASC,QACtB,4BAAK1J,EAAQyJ,SAASE,IACtB,4BAAK3J,EAAQyJ,SAASG,SACtB,4BAAK5J,EAAQyJ,SAASI,eArB/B,kBAAC,GAAD,O,0CCIAC,GATF,SAAC,GAAc,IAAZxL,EAAW,EAAXA,KACZ,OACI,yBAAKqE,UAAWC,KAAEE,KAAMM,IAAK9E,EAAK8E,KAC9B,yBAAKC,IAAI,8EACR/E,ICAPiG,GAAYJ,GAAiB,IAW7B4F,GAAmBtF,aAAU,CAAEzC,KAAM,WAAlByC,EATL,SAACb,GAEjB,OAAO,0BAAMiB,SAAUjB,EAAMkB,cACzB,kBAACC,GAAA,EAAD,CAAOtF,KAAM,UAAWuF,YAAa,UAAWC,UAAWxB,GAAUyB,SAAU,CAACjB,GAAeM,MAC/F,4CACA,8CA8BOyF,GAxBCvE,IAAMwE,MAClB,SAACrG,GAMG,OACI,yBAAKjB,UAAWC,KAAE8B,MACd,qCAEG,kBAACqF,GAAD,iBAAsBnG,EAAtB,CAA6BiB,SARvB,SAAChF,GACd+D,EAAMsG,WAAWrK,OAQT,6BAEQ+D,EAAM7D,UAAUqB,KAAI,SAAA9C,GAAI,OAAI,kBAAC,GAAD,CAAMA,KAAMA,EAAKA,KAAM8E,IAAK9E,EAAKa,cCb1EgL,GAFUzE,cAbH,SAACrG,GACnB,MAAO,CACHU,UAAWV,EAAMuC,YAAY7B,cAGZ,SAACd,GACtB,MAAO,CACHiL,WAAY,SAACrK,GACTZ,EvBsBwB,SAACY,GAAD,MAAe,CAAEd,KAlCpC,WAkCoDc,SAAUA,GuBtB1DuK,CAAqBvK,QAKjB6F,CAA6CsE,ICLvDK,GATC,SAACzG,GACb,OACI,yBAAKjB,UAAWC,KAAE8B,MACd,kBAAC,GAAD,CAAa1E,QAAS4D,EAAM5D,QAASC,OAAQ2D,EAAM3D,OAAQmJ,aAAcxF,EAAMwF,eAC/E,kBAAC,GAAD,QCDNkB,G,kLAGE,IAAIjM,EAASmH,KAAK5B,MAAM2G,MAAMC,OAAOnM,OAChCA,IACDA,EAASmH,KAAK5B,MAAMzE,IAGxBqG,KAAK5B,MAAM6G,uBAAuBpM,GAClCmH,KAAK5B,MAAM8G,sBAAsBrM,K,+BAIjC,OAAO,kBAAC,GAAD,iBAAamH,KAAK5B,MAAlB,CAAyB5D,QAASwF,KAAK5B,MAAM5D,QAASC,OAAQuF,KAAK5B,MAAM3D,OAAQmJ,aAAc5D,KAAK5B,MAAM+G,gC,GAb1FlF,IAAMH,WAwBtBjD,eACXqD,cARkB,SAACrG,GAAD,MAAY,CAC9BW,QAASX,EAAMuC,YAAY5B,QAC3BC,OAAQZ,EAAMuC,YAAY3B,OAC1Bd,GAAIE,EAAM0C,KAAK1D,OACfQ,OAAQQ,EAAM0C,KAAKlD,UAIM,CAAEqB,iBAAgBuK,uBzBQT,SAACpM,GACnC,OAAO,SAACY,IHpBc,SAACZ,GACvB,OAAOd,EAASS,IAAT,kBAAwBK,IAC1BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SGkBpByM,CAAWvM,GACNJ,MAAK,SAAAE,GACFc,EAASiB,EAAe/B,SyBZ+BuM,sBzBiBlC,SAACrM,GAClC,OAAO,SAACY,IHtBa,SAACZ,GACtB,OAAOd,EAASS,IAAT,yBAA+BK,IACjCJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SGoBpB0M,CAAUxM,GACLJ,MAAK,SAAAE,GACFc,EAhB0B,CAAEF,KAlCzB,aAkC2CkB,OAgBvB9B,SyBrBuDwM,yBzB0BtD,SAAC1K,GACrC,OAAO,SAAChB,IHxBgB,SAACgB,GACzB,OAAO1C,EAASuN,IAAT,iBAA+B,CAClC7K,OAAQA,IAEPhC,MAAK,SAAAC,GACF,OAAOA,EAASC,SGoBpBiL,CAAanJ,GACRhC,MAAK,SAAAC,GAC0B,IAAxBA,EAASgB,YACTD,EAzBY,SAACgB,GAAD,MAAa,CAAElB,KAlCzB,gBAkC8CkB,OAAQA,GAyB/C8K,CAAiB9K,WyB9B1C+K,IACA3F,GAHWhD,CAGOiI,I,oBCnBPW,GAZA,SAACrH,GAEZ,OACI,4BAAQjB,UAAWC,KAAEsI,QACjB,yBAAK7H,IAAI,qGACT,yBAAKV,UAAWC,KAAEuI,WACbvH,EAAM/E,OAAS,6BAAK,6BAAM+E,EAAMhF,OAAY,4BAAQ+H,QAAS/C,EAAMwH,oBAAvB,WAAmE,kBAAC,IAAD,CAASrI,GAAI,WAAW,wCCLlJsI,G,uKAEE,OAAO,kBAAC,GAAW7F,KAAK5B,W,GAFF6B,IAAMH,WAcrBI,iBARS,SAACrG,GACrB,MAAO,CACHF,GAAIE,EAAM0C,KAAK5C,GACfR,MAAOU,EAAM0C,KAAKpD,MAClBC,MAAOS,EAAM0C,KAAKnD,MAClBC,OAAQQ,EAAM0C,KAAKlD,UAGa,CAAEC,kBAAiBsM,mB7BoCzB,WAC9B,OAAO,SAACnM,GDeD1B,EAASiB,OAAT,cACFP,MAAK,SAAAC,GACF,OAAOA,EAASC,QChBXF,MAAK,SAAAE,GACc,IAApBA,EAAKe,YACLD,EAASH,EAAgB,KAAM,KAAM,MAAM,U6BxC5C4G,CAAkE2F,ICZ3E9G,GAAYJ,GAAiB,IA8BpBmH,GA5BG,SAAC1H,GAEf,OAAIA,EAAM/E,OAAiB,kBAAC,IAAD,CAAUkE,GAAI,aAElC,6BACH,qCACA,0BAAM8B,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,GAAA,EAAD,CAAOtF,KAAM,QAASuF,YAAa,QAASC,UAAWjB,GAAOkB,SAAU,CAACjB,GAAeM,OAE5F,6BACI,kBAACQ,GAAA,EAAD,CAAOtF,KAAM,WAAYuF,YAAa,WAAYC,UAAWjB,GAAOkB,SAAU,CAACjB,GAAeM,OAElG,6BACI,kBAACQ,GAAA,EAAD,CAAOtF,KAAM,aAAcwF,UAAWjB,GAAOjF,KAAM,aADvD,eAII6E,EAAMC,OAAS,yBAAKlB,UAAWC,KAAE2I,kBAC5B3H,EAAMC,OAGf,6BACI,6CCvBV2H,GAAiB/G,aAAU,CAAEzC,KAAM,SAAlByC,CAA6B6G,IAgBrC5F,iBANS,SAACrG,GACrB,MAAO,CACHR,OAAQQ,EAAM0C,KAAKlD,UAIa,CAAE4M,kB/BiBT,SAAC9M,EAAO+M,EAAUC,GAC/C,OAAO,SAAC1M,IDiBS,SAACN,EAAO+M,GAAkC,IAAxBC,EAAuB,wDAC1D,OAAOpO,EAASe,KAAT,aAA4B,CAC/BK,MAAOA,EACP+M,SAAUA,EACVC,WAAYA,IAEX1N,MAAK,SAAAC,GACF,OAAOA,EAASC,SCtBpBS,CAAMD,EAAO+M,EAAUC,GAAY1N,MAAK,SAAAE,GACZ,IAApBA,EAAKe,WACLD,EAASD,KAGTb,EAAKyG,SAASP,OAAS,EAAIpF,EAAS2M,YAAW,QAAS,CAAEC,OAAQ1N,EAAKyG,SAAS,MAAS3F,EAAS2M,YAAW,QAAS,CAAEC,OAAQ,sB+BzBjInG,EAdD,SAAC9B,GAKX,OAAO,kBAAC4H,GAAD,CAAgB3G,SAJN,SAAChF,GACd+D,EAAM6H,kBAAkB5L,EAASjB,MAAOiB,EAAS6L,SAAU7L,EAAS8L,aAG7B9M,OAAQ+E,EAAM/E,YCMvDiN,G,kLAGFtG,KAAK5B,MAAM5E,+B,+BAIX,OAAKwG,KAAK5B,MAAMrE,YAId,yBAAKoD,UAAU,eACb,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAQtD,MAAOmG,KAAK5B,MAAMvE,MAAMwC,UAChC,kBAAC,IAAD,CAAOkK,OAAQ,kBAAM,kBAAC,GAAD,OAAsBC,KAAK,sBAChD,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAACE,GAAD,OAAsBD,KAAK,aAChD,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAACG,GAAD,OAAoBF,KAAK,WAC9C,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,GAAD,OAAWC,KAAK,YAVH,kBAAC,GAAD,U,GAPxBvG,IAAMH,WA2BTjD,eACb2I,IACAtF,cANsB,SAACrG,GAAD,MAAY,CAClCE,YAAaF,EAAM0C,KAAKxC,eAKC,CAAEP,+BAFdqD,CAGbyJ,ICvCkBK,QACW,cAA7BhK,OAAOiK,SAASC,UAEe,UAA7BlK,OAAOiK,SAASC,UAEhBlK,OAAOiK,SAASC,SAAS9B,MACvB,2DCTN+B,IAASP,OACL,kBAAC,IAAMQ,WAAP,KACI,kBAAC,KAAD,CAAUjK,MAAOA,GACb,kBAAC,IAAD,CAAekK,SAAUC,oBACrB,kBAAC,GAAD,CAAKpN,MAAOiD,EAAMoK,gBAI9BC,SAASC,eAAe,SDkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9O,MAAK,SAAA+O,GACJA,EAAaC,gBAEdC,OAAM,SAAArJ,GACLsJ,QAAQtJ,MAAMA,EAAMlE,a,mBExI5BtC,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,mBCAzHD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,8B,mBCA9DD,EAAOC,QAAU,CAAC,KAAO,wB,mBCAzBD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,2BAA2B,OAAS,6B,mBCArGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,6B","file":"static/js/main.49190e57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3l04j\",\"item\":\"Navbar_item__24syX\",\"active\":\"Navbar_active__3XuTE\",\"friendsPanel\":\"Navbar_friendsPanel__1BIT4\",\"friends\":\"Navbar_friends__TfomX\",\"friend\":\"Navbar_friend__1a1gt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__z2LTT\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.e9aff503.jfif\";","module.exports = __webpack_public_path__ + \"static/media/preloader.e2f0d919.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__1ErrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3aRFi\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: { 'API-KEY': '372328b3-bf81-42d0-8c1e-fab40f233c14' }\r\n});\r\n\r\nexport const getUsers = (currentPage = 1, pageSize = 10) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport const getAuth = () => {\r\n    return instance.get(`auth/me`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport const getProfile = (userId) => {\r\n    return instance.get(`profile/${userId}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return instance.get(`profile/status/${userId}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return instance.put(`profile/status`, {\r\n        status: status\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport const followAPI = (userId) => {\r\n    return instance.post(`follow/${userId}`, {})\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport const unFollowAPI = (userId) => {\r\n    return instance.delete(`follow/${userId}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport const login = (email, password, rememberMe = false) => {\r\n    return instance.post(`auth/login`, {\r\n        email: email,\r\n        password: password,\r\n        rememberMe: rememberMe\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport const logout = () => {\r\n    return instance.delete(`auth/login`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}","import { stopSubmit } from \"redux-form\";\r\nimport { getAuth, login, logout } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst SET_INITIALISED = 'auth/SET_INITIALISED';\r\n\r\nlet defaultState = {\r\n    initializwd: false,\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return { ...state, ...action.data }\r\n        case SET_INITIALISED:\r\n            return { ...state, initialized: true }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, data: { userId, email, login, isAuth } });\r\nexport const initializedSuccess = () => ({ type: SET_INITIALISED });\r\n\r\nexport const inintializeAppThunkCreator = () => {\r\n    return (dispatch) => {\r\n        getAuth().then(data => {\r\n            if (data.resultCode === 0) {\r\n                let { id, login, email } = data.data;\r\n                dispatch(setAuthUserData(id, login, email, true));\r\n            }\r\n        }).then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n    }\r\n}\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n\r\n        login(email, password, rememberMe).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(inintializeAppThunkCreator());\r\n            } else {\r\n                //ощибка для всей формы\r\n                data.messages.length > 0 ? dispatch(stopSubmit(\"login\", { _error: data.messages[0] })) : dispatch(stopSubmit(\"login\", { _error: \"Some error\" }));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const logoutThunkCreator = () => {\r\n    return (dispatch) => {\r\n        logout().then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default authReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst NEW_MESSAGE_TEXT_CHANGE = 'NEW-MESSAGE-TEXT-CHANGE';\r\n\r\nconst defaultState = {\r\n    dialogsData: [\r\n        { id: 1, name: \"Olga\" },\r\n        { id: 2, name: \"Simon\" },\r\n        { id: 3, name: \"Bred\" },\r\n        { id: 4, name: \"Tanya\" },\r\n        { id: 5, name: \"Lena\" }\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: \"Hi\" },\r\n        { id: 2, message: \"How is your day?\" },\r\n        { id: 3, message: \"Great!\" },\r\n        { id: 4, message: \"Yo\" },\r\n        { id: 5, message: \"Yo\" }\r\n    ]\r\n};\r\n\r\nconst messagePageReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n\r\n            return { ...state, messagesData: [...state.messagesData, { id: 8, message: action.formData.message }], newMessageText: '' };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (formData) => ({ type: ADD_MESSAGE, formData: formData });\r\n\r\nexport default messagePageReducer;","import { getProfile, getStatus, updateStatus } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst UPDATE_STATUS = 'UPDATE_STATUS';\r\n\r\nconst defaultState = {\r\n    postsData: [\r\n        { id: 1, post: \"1 post\" },\r\n        { id: 2, post: \"2 post\" }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profilePageReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n\r\n            return { ...state, postsData: [...state.postsData, { id: 5, post: action.formData.newPost }] };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile };\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case UPDATE_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (formData) => ({ type: ADD_POST, formData: formData });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile: profile });\r\nexport const getAuthStatus = (status) => ({ type: SET_STATUS, status: status });\r\nexport const updateAuthStatus = (status) => ({ type: UPDATE_STATUS, status: status });\r\n\r\nexport const setProfileThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        getProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const getStatusThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        getStatus(userId)\r\n            .then(data => {\r\n                dispatch(getAuthStatus(data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusThunkCreator = (status) => {\r\n    return (dispatch) => {\r\n        updateStatus(status)\r\n            .then(response => {\r\n                if (response.resultCode === 0) {\r\n                    dispatch(updateAuthStatus(status));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;","const defaultState = {\r\n    friends: [\r\n        { id: 1, name: \"Olga\" },\r\n        { id: 2, name: \"Simon\" },\r\n        { id: 3, name: \"Bred\" }\r\n    ]\r\n};\r\n\r\n\r\nconst sideBarReducer = (state = defaultState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sideBarReducer;","import { getUsers, followAPI, unFollowAPI } from '../api/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_LOADING = 'TOGGLE_IS_LOADING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet defaultState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    followingProgress: []\r\n};\r\n\r\nconst usersReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: true }\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: [...action.users] };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.page };\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.totalUsersCount };\r\n\r\n        case TOGGLE_IS_LOADING:\r\n            return { ...state, isLoading: action.isLoading };\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.followingProgress ? [...state.followingProgress, action.userId] : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (id) => ({ type: FOLLOW, userId: id });\r\nexport const unFollowSuccess = (id) => ({ type: UNFOLLOW, userId: id });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users: users });\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, page: page });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalUsersCount });\r\nexport const toggleIsLoading = (isLoading) => ({ type: TOGGLE_IS_LOADING, isLoading: isLoading });\r\nexport const toggleFollowingProgress = (followingProgress, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, followingProgress: followingProgress, userId: userId });\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsLoading(true));\r\n\r\n        let data = await getUsers(currentPage, pageSize);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        dispatch(toggleIsLoading(false));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    let data = await apiMethod(userId);\r\n    if (data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n\r\n        let apiMethod = followAPI.bind(followAPI);\r\n        let actionCreator = followSuccess;\r\n\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId) => {\r\n    return async (dispatch) => {\r\n\r\n        let apiMethod = followAPI.bind(unFollowAPI);\r\n        let actionCreator = unFollowSuccess;\r\n\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\nexport default usersReducer;","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport authReducer from './auth-reducer';\r\nimport messagePageReducer from './messagesPage-reducer';\r\nimport profilePageReducer from './profilePage-reducer';\r\nimport sideBarReducer from './sideBar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: messagePageReducer,\r\n    profilePage: profilePageReducer,\r\n    sideBar: sideBarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = ({ state }) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/news\" activeClassName={s.active}>News</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></div>\r\n            <div className={s.friendsPanel}>\r\n                <div>Friends</div>\r\n                <div className={s.friends}>\r\n                    {\r\n                        state.friends.map(friend => {\r\n                            return (\r\n                                <div className={s.friend} key={friend.id}>\r\n                                    <img src=\"https://www.shareicon.net/data/512x512/2016/09/15/829453_user_512x512.png\" />\r\n                                    <p>{friend.name}</p>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './DialogItem.module.css';\r\n\r\nconst DialogItem = ({ name, id }) => {\r\n    return <div className={s.dialog}>\r\n        <img src=\"https://www.shareicon.net/data/512x512/2016/09/15/829453_user_512x512.png\" />\r\n        <NavLink to={\"/dialogs/\" + id} activeClassName={s.active}>{name}</NavLink>\r\n    </div>;\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = ({ message }) => {\r\n    return <div className={s.message}>{message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n\r\n    const error = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (error ? s.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {error && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n    const error = meta.error && meta.touched;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (error ? s.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {error && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (max) => value => {\r\n    return value && value.length <= max ? undefined : `Must be ${max} characters or less`;\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FromsControls';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validators';\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst DialogsForm = (props) => {\r\n\r\n    return <div className={s.main}>\r\n        <div className={s.dialogs}>\r\n            {\r\n                props.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />)\r\n            }\r\n        </div>\r\n        <div className={s.messages}>\r\n            {\r\n                props.messagesData.map(message => <Message message={message.message} key={message.id} />)\r\n            }\r\n            <div>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <Field name={'message'} placeholder={\"message\"} component={Textarea} validate={[requiredField, maxLength]} />\r\n                    <button >Add message</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst DialogsReduxFrom = reduxForm({ form: 'dialogs' })(DialogsForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addNewMessage(formData);\r\n    }\r\n\r\n    return (\r\n        <DialogsReduxFrom {...props} onSubmit={onSubmit} />\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) { return <Redirect to={\"/login\"} /> }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { addMessageActionCreator } from '../../redux/messagesPage-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messagesData: state.messagesPage.messagesData,\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: (formData) => {\r\n            dispatch(addMessageActionCreator(formData));\r\n        }\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import React, { useState } from 'react';\r\nimport s from './Users.module.css';\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <div>\r\n\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }} >Prev</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={props.currentPage === p && s.selectedPage}\r\n                        onClick={(e) => { props.onPageChanget(p) }}\r\n                    >{p}\r\n                    </span>\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }} >Next</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from '../../assets/images/avatar.jfif';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Users.module.css';\r\nimport Paginator from './Paginator';\r\n\r\nconst Users = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} currentPage={props.currentPage} onPageChanget={props.onPageChanget} portionSize={10} />\r\n            {\r\n                props.users.map(user => {\r\n                    return <div key={user.id}>\r\n                        <span>\r\n                            <div>\r\n                                <NavLink to={\"/profile/\" + user.id} ><img className={s.photo} src={user.photos.small != null ? user.photos.small : userPhoto}></img></NavLink>\r\n                            </div>\r\n                            <div>\r\n                                {user.followed\r\n                                    ? <button disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n                                        props.unFollow(user.id);\r\n                                    }}>Unfollow</button>\r\n                                    : <button disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n                                        props.follow(user.id);\r\n                                    }}>Follow</button>}\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <span>\r\n                                <div>{user.name}</div>\r\n                                <div>{user.satus}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"user.location.country\"}</div>\r\n                                <div>{\"user.location.sity\"}</div>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return <img src={preloader} />;\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanget = (page) => {\r\n\r\n        this.props.setCurrentPage(page);\r\n        this.props.getUsersThunkCreator(page, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.isLoading ? <Preloader /> :\r\n                        <Users totalUsersCount={this.props.totalUsersCount}\r\n                            pageSize={this.props.pageSize}\r\n                            onPageChanget={this.onPageChanget}\r\n                            currentPage={this.props.currentPage}\r\n                            users={this.props.users}\r\n                            unFollow={this.props.unFollow}\r\n                            follow={this.props.follow}\r\n                            followingProgress={this.props.followingProgress}\r\n                            toggleFollowingProgress={this.props.toggleFollowingProgress} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersAPIComponent;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const testReselectLibSelector = createSelector(getUsers, (users) => {\r\n    //используется примитивный селектор внутри сложного\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsLoading = (state) => {\r\n    return state.usersPage.isLoading;\r\n}\r\n\r\nexport const getFollowingProgress = (state) => {\r\n    return state.usersPage.followingProgress;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UsersAPIComponent from './UsersAPIComponent';\r\nimport { follow, unFollow, setCurrentPage, toggleFollowingProgress, getUsersThunkCreator } from '../../redux/users-reducer';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsLoading, getFollowingProgress, testReselectLibSelector } from '../../redux/users-selectors';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: testReselectLibSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingProgress: getFollowingProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {\r\n        follow,\r\n        unFollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsersThunkCreator\r\n    }))(UsersAPIComponent);\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let stateWithSetState = useState(false);\r\n    let [editMode, setEditMode] = stateWithSetState;\r\n    let [status, addStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        addStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n \r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        addStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !editMode ?\r\n                    <p onDoubleClick={activateMode} >{props.status}</p>\r\n                    : <input autoFocus onChange={onStatusChange} onBlur={deactivateEditMode} value={status} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.editMode ? <p onDoubleClick={this.activateEditMode}>{this.props.status}</p> : <input autoFocus\r\n                        onChange={this.onStatusChange} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            {/* <div>\r\n                <img src=\"https://www.ivi.ru/titr/uploads/2019/05/21/1bff3f12a74fb492a8c1f7ef7b87c8ff.jpg/1400x0\" />\r\n                Main content\r\n            </div> */}\r\n            <div>\r\n                {\r\n                    profile.photos.small ? <img src={profile.photos.small} /> : <img src=\"https://www.shareicon.net/data/512x512/2016/09/15/829453_user_512x512.png\" />\r\n                }\r\n                {\r\n                    status && <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                }\r\n                <div>\r\n                    <div>{profile.aboutMe}</div>\r\n                    <ul>Contacts:\r\n                        <li>{profile.contacts.github}</li>\r\n                        <li>{profile.contacts.vk}</li>\r\n                        <li>{profile.contacts.twitter}</li>\r\n                        <li>{profile.contacts.instagram}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = ({ post }) => {\r\n    return (\r\n        <div className={s.item} key={post.key}>\r\n            <img src=\"https://www.shareicon.net/data/512x512/2016/09/15/829453_user_512x512.png\" />\r\n            {post}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FromsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field name={'newPost'} placeholder={\"newPost\"} component={Textarea} validate={[requiredField, maxLength]} />\r\n        <button>Add post</button>\r\n        <button>Remove</button>\r\n    </form>\r\n}\r\n\r\nconst MyPostsReduxFrom = reduxForm({ form: 'myPosts' })(MyPostsForm);\r\n\r\nconst MyPosts = React.memo(\r\n    (props) => {\r\n\r\n        const onSubmit = (formData) => {\r\n            props.addNewPost(formData);\r\n        }\r\n\r\n        return (\r\n            <div className={s.main}>\r\n                <div>\r\n                    posts\r\n                   <MyPostsReduxFrom {...props} onSubmit={onSubmit} />\r\n                    <div>\r\n                        {\r\n                            props.postsData.map(post => <Post post={post.post} key={post.id} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profilePage-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: (formData) => {\r\n            dispatch(addPostActionCreator(formData));\r\n        }\r\n\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.main}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { setUserProfile, setProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator } from '../../redux/profilePage-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.id;\r\n        }\r\n\r\n        this.props.setProfileThunkCreator(userId);\r\n        this.props.getStatusThunkCreator(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatusThunkCreator} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    id: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setUserProfile, setProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator }),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://st.depositphotos.com/2000885/1902/i/450/depositphotos_19021343-stock-photo-red-heart.jpg\" ></img>\r\n            <div className={s.authBlock}>\r\n                {props.isAuth ? <div><div>{props.login}</div><button onClick={props.logoutThunkCreator}>Logout</button></div> : <NavLink to={'./login'}><p>Login</p></NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { setAuthUserData, logoutThunkCreator } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.auth.id,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setAuthUserData, logoutThunkCreator })(HeaderContainer);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validators';\r\nimport { Input } from '../common/FormsControls/FromsControls';\r\nimport s from '../common/FormsControls/FormControls.module.css';\r\n\r\nconst maxLength = maxLengthCreator(25);\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    if (props.isAuth) { return <Redirect to={\"/profile\"} /> }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"login\"} placeholder={\"Login\"} component={Input} validate={[requiredField, maxLength]} />\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"} placeholder={\"Password\"} component={Input} validate={[requiredField, maxLength]} />\r\n            </div>\r\n            <div>\r\n                <Field name={\"rememberMe\"} component={Input} type={\"checkbox\"} />remember me\r\n            </div>\r\n            {\r\n                props.error && <div className={s.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default LoginForm;","import axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { loginThunkCreator } from '../../redux/auth-reducer';\r\nimport LoginForm from './LoginForm';\r\n\r\n//a unique name for the form\r\nconst LoginReduxFrom = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginThunkCreator(formData.login, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    return <LoginReduxFrom onSubmit={onSubmit} isAuth={props.isAuth} />\r\n}\r\n// export default Login;\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginThunkCreator })(Login);","import React, { Suspense } from 'react';\nimport { Route, withRouter } from \"react-router-dom\";\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\n\n// const DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\n\n// const ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { inintializeAppThunkCreator } from './redux/auth-reducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.inintializeAppThunkCreator();\n  }\n\n  render() {\n    if (!this.props.initialized) { return <Preloader /> }\n\n    return (\n\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar state={this.props.state.sideBar} />\n        <Route render={() => <ProfileContainer />} path='/profile/:userId?' />\n        <Route render={() => <DialogsContainer />} path='/dialogs' />\n        <Route render={() => <UsersContainer />} path='/users' />\n        <Route render={() => <Login />} path='/login' />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.auth.initialized\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { inintializeAppThunkCreator })\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './redux/redux-store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <App state={store.getState()} />\n            </BrowserRouter >\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__30Jdk\",\"error\":\"FormControls_error__O2cLD\",\"formSummaryError\":\"FormControls_formSummaryError__1g7Gv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__ud14G\",\"selectedPage\":\"Users_selectedPage__26c_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Dialogs_main__1Ws_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__2RD-r\",\"dialog\":\"DialogItem_dialog__1kMsx\",\"active\":\"DialogItem_active__exZnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2kCgf\",\"authBlock\":\"Header_authBlock__28RIx\"};"],"sourceRoot":""}